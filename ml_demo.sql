/* Create schema objects */
/* Need path of /tmp/ml_pipe */

drop database if exists mldb;
create database if not exists mldb;
use mldb;
drop pipeline if exists ml_pipe;


/* Create simple table */
/* Trash dump table defination */
drop table if exists demo;
create table if not exists demo
(
    isFraud longtext,
    gross_income    bigint,
    deductions      bigint,
    taxes_paid      bigint,
    refund_amt      bigint,
    taxes_owed      bigint,
    decision as case when isFraud = 0 then 'REFUND' when isFraud = 1 then 'AUDIT' else 'UNKNOWN' end persisted longtext,
    indate timestamp,
    key (decision,indate) using clustered columnstore with (columnstore_segment_rows=4096)
);

/* Training data table */
create table training_data (
    gross_income decimal(38, 0) not null, 
    deductions decimal(38, 0) not null, 
    taxes_paid decimal(38, 0) not null, 
    refund_amt decimal(38, 0) not null, 
    taxes_owed decimal(38, 0) not null, 
    isfraud bool not null
);

/* Training data set */
insert into training_data (gross_income, deductions, taxes_paid, refund_amt, taxes_owed, isfraud)
values
    (100000,100000,0,100000,0,1),
    (200000,100000,100,50000,0,1),
    (50000,5000,1000,500,0,0),
    (45000,3500,100,0,400,0),
    (25000,1500,0,1500,0,0),
    (50000,5000,500,0,4500,0),
    (500000,250000,50,50000,0,1),
    (1000000,250000,100000,0,10000,0),
    (2000000,1000000,1000000,100000,0,1),
    (100000,100000,0,100000,0,1),
    (200000,100000,100,50000,0,1),
    (50000,5000,1000,500,0,0),
    (45000,3500,100,0,400,0),
    (25000,1500,0,1500,0,0),
    (50000,5000,500,0,4500,0),
    (500000,250000,50,50000,0,1),
    (1000000,250000,100000,0,10000,0),
    (2000000,1000000,1000000,100000,0,1),
    (100000,100000,0,100000,0,1),
    (200000,100000,100,50000,0,1),
    (50000,5000,1000,500,0,0),
    (45000,3500,100,0,400,0),
    (25000,1500,0,1500,0,0),
    (50000,5000,500,0,4500,0),
    (500000,250000,50,50000,0,1),
    (1000000,250000,100000,0,10000,0),
    (2000000,1000000,1000000,100000,0,1),
    (100000,100000,0,100000,0,1),
    (200000,100000,100,50000,0,1),
    (50000,5000,1000,500,0,0),
    (45000,3500,100,0,400,0),
    (25000,1500,0,1500,0,0),
    (50000,5000,500,0,4500,0),
    (500000,250000,50,50000,0,1),
    (1000000,250000,100000,0,10000,0),
    (2000000,1000000,1000000,100000,0,1),
    (100000,100000,0,100000,0,1),
    (200000,100000,100,50000,0,1),
    (50000,5000,1000,500,0,0),
    (45000,3500,100,0,400,0),
    (25000,1500,0,1500,0,0),
    (50000,5000,500,0,4500,0),
    (500000,250000,50,50000,0,1),
    (1000000,250000,100000,0,10000,0),
    (2000000,1000000,1000000,100000,0,1),
    (45000,3500,100,0,400,0),
    (25000,1500,0,1500,0,0),
    (50000,5000,500,0,4500,0),
    (500000,250000,50,50000,0,1),
    (1000000,250000,100000,0,10000,0),
    (100000,100000,0,100000,0,1),
    (200000,100000,100,50000,0,1),
    (50000,5000,1000,500,0,0),
    (45000,3500,100,0,400,0),
    (25000,1500,0,1500,0,0),
    (50000,5000,500,0,4500,0),
    (500000,250000,50,50000,0,1),
    (1000000,250000,100000,0,10000,0),
    (2000000,1000000,1000000,100000,0,1),
    (100000,100000,0,100000,0,1),
    (200000,100000,100,50000,0,1),
    (50000,5000,1000,500,0,0),
    (45000,3500,100,0,400,0),
    (25000,1500,0,1500,0,0),
    (50000,5000,500,0,4500,0),
    (500000,250000,50,50000,0,1),
    (1000000,250000,100000,0,10000,0),
    (2000000,1000000,1000000,100000,0,1),
    (100000,100000,0,100000,0,1),
    (200000,100000,100,50000,0,1),
    (50000,5000,1000,500,0,0),
    (45000,3500,100,0,400,0),
    (25000,1500,0,1500,0,0),
    (50000,5000,500,0,4500,0),
    (500000,250000,50,50000,0,1),
    (1000000,250000,100000,0,10000,0),
    (2000000,1000000,1000000,100000,0,1),
    (100000,100000,0,100000,0,1),
    (200000,100000,100,50000,0,1),
    (50000,5000,1000,500,0,0),
    (45000,3500,100,0,400,0),
    (25000,1500,0,1500,0,0),
    (50000,5000,500,0,4500,0),
    (500000,250000,50,50000,0,1),
    (1000000,250000,100000,0,10000,0),
    (2000000,1000000,1000000,100000,0,1),
    (100000,100000,0,100000,0,1),
    (200000,100000,100,50000,0,1),
    (50000,5000,1000,500,0,0),
    (45000,3500,100,0,400,0),
    (25000,1500,0,1500,0,0),
    (50000,5000,500,0,4500,0),
    (500000,250000,50,50000,0,1),
    (1000000,250000,100000,0,10000,0),
    (2000000,1000000,1000000,100000,0,1),
    (45000,3500,100,0,400,0),
    (25000,1500,0,1500,0,0),
    (50000,5000,500,0,4500,0),
    (500000,250000,50,50000,0,1),
    (1000000,250000,100000,0,10000,0);


/* Create the directory for tax return files */
\! mkdir -p /tmp/ml_pipe

/* Copy files to required locations */
\! cp stdin_mldemo.py /tmp/
\! cp tax_data.csv /tmp/


/* Create simple filesystem pipeline */
/* Need sklearn installed for python */
drop pipeline if exists ml_pipe;
create pipeline ml_pipe 
	as load data fs '/tmp/ml_pipe/'
	with transform ('file:///tmp/stdin_mldemo.py','','')
	ignore
	into table demo
	FIELDS TERMINATED BY ','
    OPTIONALLY ENCLOSED BY '"'
    LINES TERMINATED BY '\n'
    (isFraud,gross_income,deductions,taxes_paid,refund_amt,taxes_owed);

test pipeline ml_pipe;
start pipeline ml_pipe;

select count(*) from demo;

select * from demo;
